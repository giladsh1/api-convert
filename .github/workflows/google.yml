# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# GitHub recommends pinning actions to a commit SHA.
# To get a newer version, you will need to update the SHA.
# You can also reference a tag or branch, but the action may change without warning.

name: Build and Deploy to GKE

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: cluster-microservice
  GKE_ZONE: asia-east1-a
  DEPLOYMENT_AUTHDB_APP: postgres-deploy
  DEPLOYMENT_FILEDB_APP: mongodb
  DEPLOYMENT_RABBITMQ_APP: rabbitmq
  DEPLOYMENT_GATEWAY_APP: gateway
  DEPLOYMENT_AUTH_APP: auth
  DEPLOYMENT_CONVERTER_APP: converter
  DEPLOYMENT_NOTIFICATION_APP: notification
  IMAGE: static-site

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    # Setup gcloud CLI
    - uses: google-github-actions/setup-gcloud@94337306dda8180d967a56932ceb4ddcf01edae7
      with:
        service_account_key: ${{ secrets.GKE_SA_KEY }}
        project_id: ${{ secrets.GKE_PROJECT }}

    # Configure Docker to use the gcloud command-line tool as a credential
    # helper for authentication
    - run: |-
        gcloud --quiet auth configure-docker

    # Get the GKE credentials so we can deploy to the cluster
    - uses: google-github-actions/get-gke-credentials@fb08709ba27618c31c09e014e1d8364b02e5042e
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_ZONE }}
        credentials: ${{ secrets.GKE_SA_KEY }}

    # Deploy the Docker image to the GKE cluster
    - name: Deploy
      run: |-
        kubectl apply -k -
        kubectl rollout status deployment/$DEPLOYMENT_AUTHDB_APP
        kubectl rollout status statefulset/$DEPLOYMENT_FILEDB_APP
        kubectl rollout status statefulset/$DEPLOYMENT_RABBITMQ_APP
        kubectl rollout status deployment/$DEPLOYMENT_AUTH_APP
        kubectl rollout status deployment/$DEPLOYMENT_GATEWAY_APP
        kubectl rollout status deployment/$DEPLOYMENT_CONVERTER_APP
        kubectl rollout status deployment/$DEPLOYMENT_NOTIFICATION_APP
        kubectl get services -o wide
